apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
if(keystorePropertiesFile.exists())
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
else
    logger.warn('Keystore file not loaded.')

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "danb.speedrunbrowser"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 26
        versionName "1.11"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    configurations.all {
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }
}

repositories {
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //implementation 'com.android.support:multidex:1.0.3'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta05'

    implementation 'com.google.firebase:firebase-core:17.2.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-crash:16.2.1'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.room:room-runtime:2.2.0'
    kapt 'androidx.room:room-compiler:2.2.0'
    implementation 'androidx.room:room-rxjava2:2.2.0'
    testImplementation 'androidx.room:room-testing:2.2.0'
    implementation "androidx.core:core-ktx:1.1.0"

    implementation 'com.google.android.gms:play-services-auth:17.0.0'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation "io.reactivex.rxjava2:rxjava:2.2.6"

    implementation 'com.google.android:flexbox:1.1.0'

    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.github.nirhart:parallaxscroll:1.0'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
}
repositories {
    mavenCentral()
}
